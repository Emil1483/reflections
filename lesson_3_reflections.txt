When would you want to create a remote repository rather than keeping all your work local?
I would do this if I wanted to share my code with the world or when I am collaborating with others on a project. 

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
Because I do not know what the changes did, so I do not know if it might interfer with my code. Also, if it happened automaticly, it might just confuse me.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
Forks are clones but stored only in GitHub, and branches just make up the forks and clones.

What is the benefit of having a copy of the last known state of the remote stored locally?
One benifit is that I could compare my changes to the last updated version from GitHub. I could know how my changes would affect the GitHub repository.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
I would send my my changes as a new file that we would have to hold order on. That would be much harder and time consuming. However, I would not have to understand all the terms and commands assosieted with git and github. I would also not need a gitHub account and I would not have for permission to host my files privetly. That would be easier.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
Making changes directly into master is really simple and easy. However, by making the changes in a separate branch allows the creator of the gitHub repository to review the changes before merging the changes. In that way, everyone would allways be on the same page and the would make a team work way more efficently.